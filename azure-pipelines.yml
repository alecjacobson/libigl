trigger:
- dev


jobs:
- job: Windows
  timeoutInMinutes: 0
  strategy:
    matrix:
      release:
        config: 'Release'
        tutorial: 'ON'
      debug:
        config: 'Debug'
        tutorial: 'OFF'


  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-DCMAKE_BUILD_TYPE=$(config) -DLIBIGL_BUILD_TUTORIALS=$(tutorial) -G "Visual Studio 15 2017 Win64" -DLIBIGL_WITH_CGAL=ON -DLIBIGL_WITH_COMISO=OFF ..'

  - task: VSBuild@1
    inputs:
      solution: 'build/libigl.sln'
      vsVersion: '15.0'
      platform: 'x64'
      configuration: $(config)
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  
  - task: CmdLine@2
    inputs:
      script: |
        set CTEST_OUTPUT_ON_FAILURE=1
        cd build
        ctest  -C $(config) -V --output-on-failure -j --no-compress-output -T Test
    displayName: 'Running Tests'

  
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'CTest'
      testResultsFiles: '**/Test.xml'
      buildPlatform: 'windows'
      buildConfiguration: '$(config)'


- job: Macos
  timeoutInMinutes: 0
  strategy:
    matrix:
      release:
        config: 'Release'
        static: ON
        tutorial: 'ON'
      debug:
        config: 'Debug'
        static: ON
        tutorial: 'OFF'
      nonstatic:
        config: 'Debug'
        static: OFF
        tutorial: 'ON'


#   pool:
#     vmImage: 'macos-10.13'

#   steps:

#   - task: CmdLine@2
#     inputs:
#       script: |
#         brew install gmp
#         brew install mpfr
#         brew install boost
#     displayName: 'Dependencies'
  
#   - task: CMake@1
#     inputs:
#       cmakeArgs: '-DCMAKE_BUILD_TYPE=$(config) -DLIBIGL_BUILD_TUTORIALS=$(tutorial) -DLIBIGL_WITH_CGAL=ON -DLIBIGL_CHECK_UNDEFINED=ON -DLIBIGL_USE_STATIC_LIBRARY=$(static) ..'

#   - task: CmdLine@2
#     inputs:
#       script: |
#         cd build
#         make -j
#     displayName: 'Building'
  
#   - task: CmdLine@2
#     inputs:
#       script: |
#         cd build
#         ctest -V --output-on-failure -j --no-compress-output -T Test
#     displayName: 'Running Tests'
  
#   - task: PublishTestResults@2
#     inputs:
#       testResultsFormat: 'CTest'
#       testResultsFiles: '**/Test.xml'
#       buildPlatform: 'macos'
#       buildConfiguration: '$(config)'




# - job: Linux
#   timeoutInMinutes: 0
#   strategy:
#     matrix:
#       release:
#         config: 'Release'
#         static: ON
#         tutorial: 'ON'
#       debug:
#         config: 'Debug'
#         static: ON
#         tutorial: 'OFF'
#       nonstatic:
#         config: 'Debug'
#         static: OFF
#         tutorial: 'ON'
      


#   pool:
#     vmImage: 'ubuntu-16.04'

#   steps:

#   - task: CmdLine@2
#     inputs:
#       script: |
#         sudo apt-get update
#         sudo apt-get install g++-7
#         sudo apt-get install gcc-7
#         sudo apt-get install libblas-dev
#         sudo apt-get install libboost-filesystem-dev
#         sudo apt-get install libboost-system-dev
#         sudo apt-get install libboost-thread-dev
#         sudo apt-get install libglu1-mesa-dev
#         sudo apt-get install liblapack-dev
#         sudo apt-get install libmpfr-dev
#         sudo apt-get install xorg-dev
#     displayName: 'Dependencies'

#   - task: CMake@1
#     inputs:
#       cmakeArgs: '-DCMAKE_BUILD_TYPE=$(config) -DLIBIGL_BUILD_TUTORIALS=$(tutorial) -DLIBIGL_WITH_CGAL=ON -DLIBIGL_CHECK_UNDEFINED=ON  -DLIBIGL_USE_STATIC_LIBRARY=$(static) ..'

#   - task: CmdLine@2
#     inputs:
#       script: |
#         cd build
#         make -j
#     displayName: 'Building'
  
#   - task: CmdLine@2
#     inputs:
#       script: |
#         cd build
#         ctest -V --output-on-failure -j --no-compress-output -T Test
#     displayName: 'Running Tests'
  
#   - task: PublishTestResults@2
#     inputs:
#       testResultsFormat: 'CTest'
#       testResultsFiles: '**/Test.xml'
#       buildPlatform: 'linux'
#       buildConfiguration: '$(config)'
